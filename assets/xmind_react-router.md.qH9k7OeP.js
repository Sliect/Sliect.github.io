import{_ as e,c as a,o as t,a4 as r}from"./chunks/framework.Cz4QOLCt.js";const _=JSON.parse('{"title":"createRouter","description":"","frontmatter":{},"headers":[],"relativePath":"xmind/react-router.md","filePath":"xmind/react-router.md"}'),o={name:"xmind/react-router.md"},i=r('<h1 id="createrouter" tabindex="-1">createRouter <a class="header-anchor" href="#createrouter" aria-label="Permalink to &quot;createRouter&quot;">​</a></h1><h2 id="createbrowserhistory" tabindex="-1">createBrowserHistory <a class="header-anchor" href="#createbrowserhistory" aria-label="Permalink to &quot;createBrowserHistory&quot;">​</a></h2><p>对history封装，主要是 listen, push, replace, go 这四个方法 listen对popstate事件的监听 push对pushState封装, 并调用popstate监听回调 replace对replaceState封装, 并调用popstate监听回调 go就是原生的history.go</p><h3 id="createlocation" tabindex="-1">createLocation <a class="header-anchor" href="#createlocation" aria-label="Permalink to &quot;createLocation&quot;">​</a></h3><p>对location封装</p><h2 id="matchroutes" tabindex="-1">matchRoutes <a class="header-anchor" href="#matchroutes" aria-label="Permalink to &quot;matchRoutes&quot;">​</a></h2><p>扁平化路由后和 location 匹配</p><h1 id="routerprovider-dataroutes" tabindex="-1">RouterProvider &gt; DataRoutes <a class="header-anchor" href="#routerprovider-dataroutes" aria-label="Permalink to &quot;RouterProvider &gt; DataRoutes&quot;">​</a></h1><h2 id="useroutesimpl" tabindex="-1">useRoutesImpl <a class="header-anchor" href="#useroutesimpl" aria-label="Permalink to &quot;useRoutesImpl&quot;">​</a></h2><h3 id="rendermatches" tabindex="-1">_renderMatches <a class="header-anchor" href="#rendermatches" aria-label="Permalink to &quot;_renderMatches&quot;">​</a></h3><p>将匹配的路由结果渲染出来</p><h1 id="navigate" tabindex="-1">navigate <a class="header-anchor" href="#navigate" aria-label="Permalink to &quot;navigate&quot;">​</a></h1><h2 id="startnavigation" tabindex="-1">startNavigation <a class="header-anchor" href="#startnavigation" aria-label="Permalink to &quot;startNavigation&quot;">​</a></h2><h3 id="rendermatches-1" tabindex="-1">renderMatches <a class="header-anchor" href="#rendermatches-1" aria-label="Permalink to &quot;renderMatches&quot;">​</a></h3><h3 id="updatestate" tabindex="-1">updateState <a class="header-anchor" href="#updatestate" aria-label="Permalink to &quot;updateState&quot;">​</a></h3><p>触发setState，重新渲染组件树</p>',16),s=[i];function h(n,c,d,l,u,p){return t(),a("div",null,s)}const b=e(o,[["render",h]]);export{_ as __pageData,b as default};
